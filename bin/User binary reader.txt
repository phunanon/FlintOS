User binary reader
- accepts 9-bit read point from user
- accepts 9-bit read end point from the user
- reads bytes to screen as hex
Note: little-endian

S_	':'	drop char
PC		print char

		Get read point
MI		++mem
CV	05	copy bit from user to _
MD		--mem
CV	01	copy byte from user to _
ES		set eeprom point from __

S_	'-'	drop char
PC		print char

		Get read end point
MI		++mem
CV	05	copy bit from user to _
MD		--mem
CV	01	copy byte from user to _
4I		++ read end point
MA	04	mem += 4

S_	0x7F	drop char (new line)
PC		print char

ER		:loop: read EEPROM to _
PX		print _ as hex
EG		read eeprom pointer to __
J4	end,00	jump to :end: if ____ == end point
JU	loop	jump back to loop
HT		:end:

0x10,':', 0x40,
0x0A, 0x30,0x05, 0x0B, 0x30,0x01, 0x60,
0x10,'-', 0x40,
0x0A, 0x30,0x05, 0x0B, 0x30,0x01, 0x2E, 0x0C,0x04,
0x10,0x7F, 0x40,
0x62, 0x41, 0x61, 0x06,33,0x00, 0x02,25, 0xFF
